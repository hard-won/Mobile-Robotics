#include<iostream>
#include<fstream>
#include<math.h>
using namespace std;
#define PI 3.14159265
int build_environment_map(){
// To initialize all the parameters by using data in the figure above.
double x0[5]={0.8, 0.8, 1.7, 2.2, 2.25};
double y0[5]={1.5, 2.25, 1.0, 1.3, 0.25};
double r=0.125, wallLength=2.5;
double RD=PI /180;
// Open a data file “EnvironmentMap.txt” for storing walls, pillars and charger generated by your code.
ofstream map;
map.open("EnvironmentMap.txt");
// The following code is to create a charger based on its centre.
for (int i=0; i<360; i=i+20) {
map<<x0[4]+r*cos(i*RD)<<' '<<y0[4]+r*sin(i*RD)<<endl;
map<<x0[3]+r*cos(i*RD)<<' '<<y0[3]+r*sin(i*RD)<<endl;
map<<x0[2]+r*cos(i*RD)<<' '<<y0[2]+r*sin(i*RD)<<endl;
map<<x0[1]+r*cos(i*RD)<<' '<<y0[1]+r*sin(i*RD)<<endl;
map<<x0[0]+r*cos(i*RD)<<' '<<y0[0]+r*sin(i*RD)<<endl;
}
// put your code here to generate four circle pillars with the given centres.

// For your reference, the following code is used to generate one wall.
for (double j=0 ; j<wallLength; j=j+0.01){
map << j << ' ' << 0 << endl;
// put your code here to generate other three walls.
map << j << ' ' << 2.5 <<endl;
map << 0 << ' ' << j <<endl;
map << 2.5 << ' ' << j <<endl;
}
// put your code here to generate a square robot, e.g., each side = 0.25m
for (double k=0.3-0.25/2 ; k<0.25/2+0.3 ; k=k+0.01){
 map<<k<<' '<<0.3-0.25/2<<endl;
 map<<k<<' '<<(0.3+0.25/2)<<endl;
 map<<0.3-0.25/2<<' '<<k<<endl;
 map<<(0.3+0.25/2)<<' '<<k<<endl;
}

map.close();
return 0;
}
// add the main function into your code for compilation
int main(int argc, char **argv)
{
int i;
i = build_environment_map();
return 0;
}
